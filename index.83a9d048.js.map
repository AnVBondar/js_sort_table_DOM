{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CACjD,EAAO,EAAM,QAAQ,CACrB,EAAe,CACnB,KAAM,OACN,SAAU,WACV,IAAK,MACL,OAAQ,QACV,EA0DA,SAAS,EAAU,CAAM,SACvB,AAAK,EAAO,QAAQ,CAAC,KAId,CAAC,EAAO,OAAO,CAAC,SAAU,IAHxB,CAAC,CAIZ,C,2D;AA9DA,SAAS,IAAI,CAAC,gBAAgB,CAAC,QAAS,SAAC,CAAzC,EACE,IACI,EADI,EAAW,EAAX,MAAR,CAGA,GAAI,AAAqB,OAArB,EAAO,SAAS,CAAW,CAC7B,OAAQ,EAAO,SAAS,EACtB,KAAK,EAAa,IAAI,CACpB,EAAO,EAAG,GAAM,IAAI,CAAC,SAAC,CAAA,CAAO,CAA7B,EACE,IAAM,EAAQ,EAAM,QAAQ,CAAC,EAAE,CAAC,SAAS,CACnC,EAAS,EAAM,QAAQ,CAAC,EAAE,CAAC,SAAS,CAE1C,OAAO,EAAM,aAAa,CAAC,EAC7B,GAEA,KAEF,MAAK,EAAa,QAAQ,CACxB,EAAO,EAAG,GAAM,IAAI,CAAC,SAAC,CAAA,CAAO,CAA7B,EACE,IAAM,EAAQ,EAAM,QAAQ,CAAC,EAAE,CAAC,SAAS,CACnC,EAAS,EAAM,QAAQ,CAAC,EAAE,CAAC,SAAS,CAE1C,OAAO,EAAM,aAAa,CAAC,EAC7B,GAEA,KAEF,MAAK,EAAa,GAAG,CACnB,EAAO,EAAG,GAAM,IAAI,CAAC,SAAC,CAAA,CAAO,CAA7B,EAIE,OAAO,AAHO,EAAU,EAAM,QAAQ,CAAC,EAAE,CAAC,SAAS,EACpC,EAAU,EAAM,QAAQ,CAAC,EAAE,CAAC,SAAS,CAGtD,GAEA,KAEF,MAAK,EAAa,MAAM,CACtB,EAAO,EAAG,GAAM,IAAI,CAAC,SAAC,CAAA,CAAO,CAA7B,EAIE,OAAO,AAHO,EAAU,EAAM,QAAQ,CAAC,EAAE,CAAC,SAAS,EACpC,EAAU,EAAM,QAAQ,CAAC,EAAE,CAAC,SAAS,CAGtD,EAMJ,CAEA,EAAI,OAAO,CAAC,SAAA,CAAZ,EACE,EAAM,MAAM,CAAC,EACf,EACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tbody = document.getElementsByTagName(\"tbody\")[0];\nvar rows = tbody.children;\nvar sortCategory = {\n    name: \"Name\",\n    position: \"Position\",\n    age: \"Age\",\n    salary: \"Salary\"\n};\ndocument.body.addEventListener(\"click\", function(e) {\n    var target = e.target;\n    var arr;\n    if (target.localName === \"th\") {\n        switch(target.innerText){\n            case sortCategory.name:\n                arr = _to_consumable_array(rows).sort(function(elem1, elem2) {\n                    var first = elem1.children[0].innerText;\n                    var second = elem2.children[0].innerText;\n                    return first.localeCompare(second);\n                });\n                break;\n            case sortCategory.position:\n                arr = _to_consumable_array(rows).sort(function(elem1, elem2) {\n                    var first = elem1.children[1].innerText;\n                    var second = elem2.children[1].innerText;\n                    return first.localeCompare(second);\n                });\n                break;\n            case sortCategory.age:\n                arr = _to_consumable_array(rows).sort(function(elem1, elem2) {\n                    var first = getNumber(elem1.children[2].innerText);\n                    var second = getNumber(elem2.children[2].innerText);\n                    return first - second;\n                });\n                break;\n            case sortCategory.salary:\n                arr = _to_consumable_array(rows).sort(function(elem1, elem2) {\n                    var first = getNumber(elem1.children[3].innerText);\n                    var second = getNumber(elem2.children[3].innerText);\n                    return first - second;\n                });\n                break;\n            default:\n                break;\n        }\n        arr.forEach(function(li) {\n            tbody.append(li);\n        });\n    }\n});\nfunction getNumber(string) {\n    if (!string.includes(\"$\")) return +string;\n    return +string.replace(/[$,]/ig, \"\");\n}\n\n//# sourceMappingURL=index.83a9d048.js.map\n","'use strict';\n\nconst tbody = document.getElementsByTagName('tbody')[0];\nconst rows = tbody.children;\nconst sortCategory = {\n  name: 'Name',\n  position: 'Position',\n  age: 'Age',\n  salary: 'Salary',\n};\n\ndocument.body.addEventListener('click', (e) => {\n  const { target } = e;\n  let arr;\n\n  if (target.localName === 'th') {\n    switch (target.innerText) {\n      case sortCategory.name:\n        arr = [...rows].sort((elem1, elem2) => {\n          const first = elem1.children[0].innerText;\n          const second = elem2.children[0].innerText;\n\n          return first.localeCompare(second);\n        });\n\n        break;\n\n      case sortCategory.position:\n        arr = [...rows].sort((elem1, elem2) => {\n          const first = elem1.children[1].innerText;\n          const second = elem2.children[1].innerText;\n\n          return first.localeCompare(second);\n        });\n\n        break;\n\n      case sortCategory.age:\n        arr = [...rows].sort((elem1, elem2) => {\n          const first = getNumber(elem1.children[2].innerText);\n          const second = getNumber(elem2.children[2].innerText);\n\n          return first - second;\n        });\n\n        break;\n\n      case sortCategory.salary:\n        arr = [...rows].sort((elem1, elem2) => {\n          const first = getNumber(elem1.children[3].innerText);\n          const second = getNumber(elem2.children[3].innerText);\n\n          return first - second;\n        });\n\n        break;\n\n      default:\n        break;\n    }\n\n    arr.forEach(li => {\n      tbody.append(li);\n    });\n  }\n});\n\nfunction getNumber(string) {\n  if (!string.includes('$')) {\n    return +string;\n  }\n\n  return +string.replace(/[$,]/ig, '');\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tbody","document","getElementsByTagName","rows","children","sortCategory","position","age","salary","getNumber","string","includes","replace","body","addEventListener","e","target","localName","innerText","sort","elem1","elem2","first","second","localeCompare","forEach","li","append"],"version":3,"file":"index.83a9d048.js.map"}